<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"  
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/task  
                        http://www.springframework.org/schema/task/spring-task-4.0.xsd
                        http://www.springframework.org/schema/tx
                     	http://www.springframework.org/schema/tx/spring-tx.xsd
                     	http://www.springframework.org/schema/aop 
                     	http://www.springframework.org/schema/aop/spring-aop.xsd">
	<!-- <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
	              <value>classpath:druid.properties</value>
	        </list>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true"></property>
	</bean> -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="url" value="${url}"/>
		<property name="username" value="${username}"/>
		<property name="password" value="${password}"/>
		<property name="initialSize" value="${initialSize}"></property>
		<property name="maxActive" value="${maxActive}"></property>
		<!-- <property name="maxIdle" value="${maxIdle}"></property> -->
		<property name="minIdle" value="${minIdle}"></property>
		<property name="maxWait" value="${maxWait}"></property>
	    <property name="timeBetweenEvictionRunsMillis" value="60000"/>  
	    <!-- 一个连接的最小存活时间（毫秒） -->  
	    <property name="minEvictableIdleTimeMillis" value="300000"/>  
	    <property name="validationQuery" value="SELECT 'x'"/>
	    <property name="testOnBorrow" value="false"/>
	    <property name="testOnReturn" value="false"/>
	    <property name="testWhileIdle" value="true"/>
	    <property name="poolPreparedStatements" value="true"/>
	    <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
	    <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->  
	    <!-- <property name="filters" value="stat"/> -->
	</bean>

	<!-- spring配置扫描mapper xml，不需要mybatis配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations">
			<list>
				<value>classpath:com/meme/core/mapping/*.xml</value>
				<value>classpath:com/meme/im/mapping/*.xml</value>
				<value>classpath:com/meme/qiniu/mapping/*.xml</value>
			</list>
		</property>
		<!-- <property name="configLocation" value="classpath:mybatis.xml"></property> -->
		
		<!-- 分页插件 -->
		<property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <value>
                            helperDialect=mysql
                            supportMethodsArguments=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
	</bean>
	
	<!-- 自动扫描mapper接口-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage">
			<value>
				com.meme.core.dao,
				com.meme.im.dao,
				com.meme.qiniu.dao
			</value>
		</property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
		<!-- 代码切换数据源配置
		默认数据源为mybatis-datasource-meme，使用新数据源前调用ExpressContextHolder.setContextType(ExpressContextHolder.SESSION_FACTORY_SCHEMA)
		之后，方可执行新数据源的数据库操作
		 -->
		<!-- <property name="sqlSessionTemplateBeanName" value="sqlSessionTemplate"></property>
		<property name="markerInterface" value="com.meme.core.spring.db.SqlMapper"></property> -->
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
		<qualifier value="meme"/>
	</bean>

</beans>