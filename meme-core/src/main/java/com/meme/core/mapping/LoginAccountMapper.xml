<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.meme.core.dao.LoginAccountMapper" >
  <resultMap id="BaseResultMap" type="com.meme.core.pojo.LoginAccount" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="organid" property="organid" jdbcType="BIGINT" />
    <result column="deptid" property="deptid" jdbcType="BIGINT" />
    <result column="postid" property="postid" jdbcType="BIGINT" />
    <result column="createby" property="createby" jdbcType="BIGINT" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ViewResultMap" type="com.meme.core.pojo.LoginAccountInfoView" >
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="organid" property="organid" jdbcType="BIGINT" />
    <result column="deptid" property="deptid" jdbcType="BIGINT" />
    <result column="postid" property="postid" jdbcType="BIGINT" />
    <result column="createby" property="createby" jdbcType="BIGINT" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="loginid" property="loginid" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="cellphone" property="cellphone" jdbcType="VARCHAR" />
    <result column="homephone" property="homephone" jdbcType="VARCHAR" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="sign" property="sign" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="deptname" property="deptname" jdbcType="VARCHAR" />
    <result column="posname" property="posname" jdbcType="VARCHAR" />
    <result column="orgname" property="orgname" jdbcType="VARCHAR" />
    <result column="orgtype" property="orgtype" jdbcType="INTEGER" />
    <result column="orgstate" property="orgstate" jdbcType="INTEGER" />
    <result column="organopentime" property="organopentime" jdbcType="TIMESTAMP" />
    <result column="organendtime" property="organendtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, account, password, salt, state, organid, deptid, postid, createby, createtime
  </sql>
  <sql id="View_Column_List" >
    sys_login_account.*,sys_login_account_info.*,
	sys_department.name AS deptname,
	sys_position.name AS posname,
	sys_organization.name AS orgname,
	sys_organization.type AS orgtype,
	sys_organization.state AS orgstate,
	sys_organization.opentime AS organopentime,
	sys_organization.endtime AS organendtime
  </sql>
  <select id="selectLoginAccountInfoViewById" resultMap="ViewResultMap" parameterType="java.lang.Long">
  	SELECT
	<include refid="View_Column_List" />
	FROM
	sys_login_account
	INNER JOIN sys_login_account_info ON sys_login_account.id = sys_login_account_info.loginid
	LEFT JOIN sys_department ON sys_login_account.deptid = sys_department.id
	LEFT JOIN sys_position ON sys_login_account.postid = sys_position.id
	INNER JOIN sys_organization ON sys_login_account.organid = sys_organization.id 
    where sys_login_account.id=sys_login_account_info.loginid
    and sys_login_account.id=#{id}
  </select>
  <select id="isExist" resultMap="ViewResultMap" parameterType="java.lang.String">
  	SELECT
	<include refid="View_Column_List" />
	FROM
	sys_login_account
	INNER JOIN sys_login_account_info ON sys_login_account.id = sys_login_account_info.loginid
	LEFT JOIN sys_department ON sys_login_account.deptid = sys_department.id
	LEFT JOIN sys_position ON sys_login_account.postid = sys_position.id
	INNER JOIN sys_organization ON sys_login_account.organid = sys_organization.id 
    where sys_login_account.id=sys_login_account_info.loginid
    <if test="loginStr != null and loginStr != ''">
	    and 
	    (sys_login_account.account=#{loginStr} 
	    or sys_login_account_info.cellphone=#{loginStr} 
	    or sys_login_account_info.email=#{loginStr})
    </if>
    <if test="loginid != null and loginid != 0">
    	and sys_login_account.id=#{loginid}
    </if>
  </select>
  <select id="selectByPaginationView" resultMap="ViewResultMap" parameterType="com.meme.core.form.Form">
  	select 
  	<include refid="View_Column_List" />
	FROM
	sys_login_account
	INNER JOIN sys_login_account_info ON sys_login_account.id = sys_login_account_info.loginid
	LEFT JOIN sys_department ON sys_login_account.deptid = sys_department.id
	LEFT JOIN sys_position ON sys_login_account.postid = sys_position.id
	INNER JOIN sys_organization ON sys_login_account.organid = sys_organization.id 
	where sys_login_account.organid=#{organid}
	<if test="accountState !=null and accountState !=''">
		and sys_login_account.state=#{accountState}
	</if>
	<if test="deptid != null and deptid != 0">
		and sys_login_account.deptid=#{deptid}
	</if>
	<if test="sex != null">
		and sys_login_account_info.sex=#{sex}
	</if>
	<if test="searchKey != null and searchKey != ''">
		and (
			account LIKE CONCAT('%', #{searchKey},'%')
			or username LIKE CONCAT('%', #{searchKey},'%')  
			or cellphone LIKE CONCAT('%', #{searchKey},'%')
			or nickname LIKE CONCAT('%', #{searchKey},'%')
			or address LIKE CONCAT('%', #{searchKey},'%')
			or email LIKE CONCAT('%', #{searchKey},'%')
			or homephone LIKE CONCAT('%', #{searchKey},'%')
			or sign LIKE CONCAT('%', #{searchKey},'%')
			)
	</if>
	<if test="sort != null and sort != ''">
  		order by ${sort} ${order}
  	</if>
  	limit #{offset},#{limit}
  </select>
  <select id="countView" resultType="java.lang.Integer" parameterType="com.meme.core.form.Form">
  	select count(*) FROM
	sys_login_account
	INNER JOIN sys_login_account_info ON sys_login_account.id = sys_login_account_info.loginid
	LEFT JOIN sys_department ON sys_login_account.deptid = sys_department.id
	LEFT JOIN sys_position ON sys_login_account.postid = sys_position.id
	INNER JOIN sys_organization ON sys_login_account.organid = sys_organization.id 
	where sys_login_account.organid=#{organid}
	<if test="accountState !=null and accountState !=''">
		and sys_login_account.state=#{accountState}
	</if>
	<if test="deptid != null and deptid != 0">
		and sys_login_account.deptid=#{deptid}
	</if>
	<if test="sex != null">
		and sys_login_account_info.sex=#{sex}
	</if>
	<if test="searchKey != null and searchKey != ''">
		and (
			account LIKE CONCAT('%', #{searchKey},'%')
			or username LIKE CONCAT('%', #{searchKey},'%')  
			or cellphone LIKE CONCAT('%', #{searchKey},'%')
			or nickname LIKE CONCAT('%', #{searchKey},'%')
			or address LIKE CONCAT('%', #{searchKey},'%')
			or email LIKE CONCAT('%', #{searchKey},'%')
			or homephone LIKE CONCAT('%', #{searchKey},'%')
			or sign LIKE CONCAT('%', #{searchKey},'%')
			)
	</if>
  </select>
  <update id="updateStateByids">
  	UPDATE sys_login_account SET state=#{state} where id in
  	<foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
   		#{item}
   	</foreach>
  </update>
  <update id="resetPassword">
  	UPDATE sys_login_account SET password=#{password} where id=#{loginid}
  </update>
  
  
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sys_login_account
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_login_account
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.meme.core.pojo.LoginAccount" >
    insert into sys_login_account (id, account, password, 
      salt, state, organid, 
      deptid, postid, createby, 
      createtime)
    values (#{id,jdbcType=BIGINT}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{organid,jdbcType=BIGINT}, 
      #{deptid,jdbcType=BIGINT}, #{postid,jdbcType=BIGINT}, #{createby,jdbcType=BIGINT}, 
      #{createtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.meme.core.pojo.LoginAccount">
    insert into sys_login_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="organid != null" >
        organid,
      </if>
      <if test="deptid != null" >
        deptid,
      </if>
      <if test="postid != null" >
        postid,
      </if>
      <if test="createby != null" >
        createby,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="organid != null" >
        #{organid,jdbcType=BIGINT},
      </if>
      <if test="deptid != null" >
        #{deptid,jdbcType=BIGINT},
      </if>
      <if test="postid != null" >
        #{postid,jdbcType=BIGINT},
      </if>
      <if test="createby != null" >
        #{createby,jdbcType=BIGINT},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.meme.core.pojo.LoginAccount" >
    update sys_login_account
    <set >
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="organid != null" >
        organid = #{organid,jdbcType=BIGINT},
      </if>
      <choose>
      	<when test="deptid != null">
      	deptid = #{deptid,jdbcType=BIGINT},
      	</when>
      	<otherwise>
      	deptid =null,
      	</otherwise>
      </choose>
      <choose>
      	<when test="postid != null">
      	postid = #{postid,jdbcType=BIGINT},
      	</when>
      	<otherwise>
      	postid = null,
      	</otherwise>
      </choose>
      <if test="createby != null" >
        createby = #{createby,jdbcType=BIGINT},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.meme.core.pojo.LoginAccount" >
    update sys_login_account
    set account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      organid = #{organid,jdbcType=BIGINT},
      deptid = #{deptid,jdbcType=BIGINT},
      postid = #{postid,jdbcType=BIGINT},
      createby = #{createby,jdbcType=BIGINT},
      createtime = #{createtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>