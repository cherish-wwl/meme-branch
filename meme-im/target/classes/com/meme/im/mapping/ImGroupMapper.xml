<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.meme.im.dao.ImGroupMapper" >
  <resultMap id="BaseResultMap" type="com.meme.im.pojo.ImGroup" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="groupname" property="groupname" jdbcType="VARCHAR" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="memberid" property="memberid" jdbcType="BIGINT" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="addtime" property="addtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, groupname, avatar, memberid, state, num, level,description,addtime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from meme_im_group
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from meme_im_group
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.meme.im.pojo.ImGroup" >
    insert into meme_im_group (id, groupname, avatar, memberid, state, num, level,description,addtime
      )
    values (#{id,jdbcType=BIGINT}, #{groupname,jdbcType=VARCHAR},#{avatar,jdbcType=VARCHAR}, #{memberid,jdbcType=BIGINT}, 
      #{state,jdbcType=INTEGER}, #{num,jdbcType=INTEGER}, #{level,jdbcType=VARCHAR},#{description,jdbcType=VARCHAR}, #{addtime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.meme.im.pojo.ImGroup" >
    insert into meme_im_group
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="groupname != null" >
        groupname,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
      <if test="memberid != null" >
        memberid,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="addtime != null" >
        addtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="groupname != null" >
        #{groupname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="memberid != null" >
        #{memberid,jdbcType=BIGINT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.meme.im.pojo.ImGroup" >
    update meme_im_group
    <set >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="groupname != null" >
        #{groupname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="memberid != null" >
        #{memberid,jdbcType=BIGINT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.meme.im.pojo.ImGroup" >
    update meme_im_group
    set groupname = #{groupname,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      memberid = #{memberid,jdbcType=BIGINT},
      state = #{state,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      addtime = #{addtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectGroupListByPagination" resultType="java.util.HashMap" parameterType="com.meme.core.form.Form">
  	SELECT * from meme_im_group WHERE
  	id NOT IN (SELECT groupid FROM meme_im_friend WHERE friendid=#{primarykey})
  	<if test="searchKey != null and searchKey != ''">
		AND groupname  LIKE CONCAT('%', #{searchKey},'%')	
	</if>
	<if test="sort != null and sort != ''">
  		order by ${sort} ${order}
  	</if>
  	limit #{offset},#{limit}
  </select>
  <select id="countGrouplist" resultType="java.lang.Integer" parameterType="com.meme.core.form.Form">
  	SELECT COUNT(*) from meme_im_group WHERE
  	id NOT IN (SELECT groupid FROM meme_im_friend WHERE friendid=#{primarykey})
  	<if test="searchKey != null and searchKey != ''">
		AND groupname  LIKE CONCAT('%', #{searchKey},'%')	
	</if>
  </select>
  <select id="selectByPaginationView" resultType="java.util.LinkedHashMap" parameterType="com.meme.im.form.ImForm">
  	SELECT g.*,m.account,m.nickname from meme_im_group g
  	LEFT JOIN meme_member m ON g.memberid = m.memberid
  	 WHERE 1=1 
  	 <if test="send_str != null and send_str != ''">
		AND (m.account  LIKE CONCAT('%', #{send_str},'%') OR m.nickname  LIKE CONCAT('%', #{send_str},'%'))
	</if>
  	<if test="searchKey != null and searchKey != ''">
		AND g.groupname  LIKE CONCAT('%', #{searchKey},'%')	
	</if>
	<if test="sort != null and sort != ''">
  		order by ${sort} ${order}
  	</if>
  	limit #{offset},#{limit}
  </select>
  <select id="countView" resultType="java.lang.Integer" parameterType="com.meme.im.form.ImForm">
  	SELECT COUNT(*) from meme_im_group g
  	LEFT JOIN meme_member m ON g.memberid = m.memberid
  	 WHERE 1=1 
  	 <if test="send_str != null and send_str != ''">
		AND (m.account  LIKE CONCAT('%', #{send_str},'%') OR m.nickname  LIKE CONCAT('%', #{send_str},'%'))
	</if>
  	<if test="searchKey != null and searchKey != ''">
		AND g.groupname  LIKE CONCAT('%', #{searchKey},'%')	
	</if>
  </select>
  <select id="selectGroupMemberByPagination" resultType="java.util.HashMap" parameterType="com.meme.im.form.ImForm">
  	SELECT m.*,f.addtime from meme_im_friend f
  	LEFT JOIN meme_member m ON f.friendid=m.memberid WHERE
  	f.groupid =#{primarykey}
  	<if test="sort != null and sort != ''">
  		order by ${sort} ${order}
  	</if>
  	limit #{offset},#{limit}
  </select>
  <select id="countGroupMember" resultType="java.lang.Integer" parameterType="com.meme.im.form.ImForm">
  	SELECT count(*) from meme_im_friend f
  	LEFT JOIN meme_member m ON f.friendid=m.memberid WHERE
  	f.groupid =#{primarykey}
  </select>
  <select id="selectGroupMessageByPagination" resultType="java.util.HashMap" parameterType="com.meme.im.form.ImForm">
	  SELECT msg.*,
	  send_mem.account AS send_account,
		send_mem.nickname AS send_nickname,
		send_mem.mtype AS send_mtype,g.groupname
		 FROM (select DISTINCT sendid,sendtime,groupid,content from meme_im_message where msgtype = 1) msg
	  LEFT JOIN meme_member send_mem ON msg.sendid=send_mem.memberid
	  LEFT JOIN meme_im_group g ON g.id = msg.groupid
	  WHERE 1=1
	  <if test="send_mtype != null and send_mtype != ''">
			AND send_mem.mtype=#{send_mtype}
		</if>
		<if test="send_str != null and send_str != ''">
			AND (send_mem.account LIKE CONCAT('%', #{send_str},'%') OR send_mem.nickname LIKE CONCAT('%', #{send_str},'%'))
		</if>
		<if test="searchKey != null and searchKey != ''">
			and msg.content LIKE CONCAT('%', #{searchKey},'%')
		</if>
		<if test="startdate != null">
			AND msg.sendtime >= #{startdate}
		</if>
		<if test="enddate != null">
		<![CDATA[
			AND msg.sendtime <= #{enddate}
			]]>
		</if>
		<choose>
			<when test="sort != null and sort != ''">order by ${sort} ${order}</when>
			<otherwise>order by msg.sendtime desc</otherwise>
		</choose>
	  	limit #{offset},#{limit}
  </select>
  <select id="countGroupMessage" resultType="java.lang.Integer" parameterType="com.meme.im.form.ImForm">
  	SELECT COUNT(*)
		 FROM (select DISTINCT sendid,sendtime,groupid,content from meme_im_message where msgtype = 1) msg
	  LEFT JOIN meme_member send_mem ON msg.sendid=send_mem.memberid
	  LEFT JOIN meme_im_group g ON g.id = msg.groupid
	  WHERE 1=1
	  <if test="send_mtype != null and send_mtype != ''">
			AND send_mem.mtype=#{send_mtype}
		</if>
		<if test="send_str != null and send_str != ''">
			AND (send_mem.account LIKE CONCAT('%', #{send_str},'%') OR send_mem.nickname LIKE CONCAT('%', #{send_str},'%'))
		</if>
		<if test="searchKey != null and searchKey != ''">
			and msg.content LIKE CONCAT('%', #{searchKey},'%')
		</if>
		<if test="startdate != null">
			AND msg.sendtime >= #{startdate}
		</if>
		<if test="enddate != null">
		<![CDATA[
			AND msg.sendtime <= #{enddate}
			]]>
		</if>
  </select>
  
   <select id="selectGroups" resultMap="BaseResultMap" parameterType="java.lang.Long">
  	SELECT * from meme_im_group WHERE
  	id IN (SELECT groupid FROM meme_im_friend WHERE friendid=#{memberid})
  </select>
   <select id="getGroupMembers" resultType="java.util.HashMap" parameterType="java.lang.Long">
  	SELECT m.* from meme_im_friend f
  	LEFT JOIN meme_member m ON f.friendid=m.memberid WHERE
  	f.groupid =#{groupid}
  </select>
   <update id="updateNum" parameterType="java.lang.Long" >
    update meme_im_group
    set num = num+1
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>